
Test File [/home/masheenist/source/lab4-lab4-hanscom-llosa/tests/mytests/connor_augustus_nested_if.py]
- - - - - - - -
x = 3
y = input()
z = [1, 2, 3] if x == y else [4,5,6] if x < y else [7,8,9]
print z
- - - - - - - -
explicate Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], InjectFrom(Const(0), Const(3))), Assign([AssName('y', 'OP_ASSIGN')], InjectFrom(Const(0), CallFunc('input', [], None, None))), Assign([AssName('z', 'OP_ASSIGN')], IfExp(Let(Name('0'), Let(Name('1'), Name('x'), Let(Name('2'), Name('y'), IfExp(Let(Name('6'), Compare(GetTag(Name('1')), [('==', Const(3))]), IfExp(Name('6'), Compare(GetTag(Name('2')), [('==', Const(3))]), Name('6'))), InjectFrom(Const(1), CallFunc('equal', [ProjectTo(Const(3), Name('1')), ProjectTo(Const(3), Name('2'))], None, None)), IfExp(Let(Name('5'), Let(Name('3'), Compare(GetTag(Name('1')), [('==', Const(0))]), IfExp(Name('3'), Compare(GetTag(Name('2')), [('==', Const(0))]), Name('3'))), IfExp(Not(Name('5')), Let(Name('4'), Compare(GetTag(Name('1')), [('==', Const(1))]), IfExp(Name('4'), Compare(GetTag(Name('2')), [('==', Const(1))]), Name('4'))), Name('5'))), InjectFrom(Const(1), Compare(ProjectTo(Const(0), Name('1')), [('==', ProjectTo(Const(0), Name('2')))])), CallFunc('abort', [], None, None))))), IfExp(Compare(GetTag(Name('0')), [('==', Const(3))]), Not(Let(Name('8'), CallFunc('equal', [ProjectTo(Const(3), Name('0')), ProjectTo(Const(3), List([]))], None, None), IfExp(Not(Name('8')), CallFunc('equal', [ProjectTo(Const(3), Name('0')), ProjectTo(Const(3), Dict([]))], None, None), Name('8')))), IfExp(Let(Name('7'), Compare(GetTag(Name('0')), [('==', Const(0))]), IfExp(Not(Name('7')), Compare(GetTag(Name('0')), [('==', Const(1))]), Name('7'))), ProjectTo(Const(1), Name('0')), CallFunc('abort', [], None, None)))), List([InjectFrom(Const(0), Const(1)), InjectFrom(Const(0), Const(2)), InjectFrom(Const(0), Const(3))]), IfExp(Let(Name('9'), Let(Name('10'), Name('x'), Let(Name('11'), Name('y'), IfExp(Let(Name('15'), Compare(GetTag(Name('10')), [('==', Const(3))]), IfExp(Name('15'), Compare(GetTag(Name('11')), [('==', Const(3))]), Name('15'))), InjectFrom(Const(1), CallFunc('equal', [ProjectTo(Const(3), Name('10')), ProjectTo(Const(3), Name('11'))], None, None)), IfExp(Let(Name('14'), Let(Name('12'), Compare(GetTag(Name('10')), [('==', Const(0))]), IfExp(Name('12'), Compare(GetTag(Name('11')), [('==', Const(0))]), Name('12'))), IfExp(Not(Name('14')), Let(Name('13'), Compare(GetTag(Name('10')), [('==', Const(1))]), IfExp(Name('13'), Compare(GetTag(Name('11')), [('==', Const(1))]), Name('13'))), Name('14'))), InjectFrom(Const(1), Compare(ProjectTo(Const(0), Name('10')), [('<', ProjectTo(Const(0), Name('11')))])), CallFunc('abort', [], None, None))))), IfExp(Compare(GetTag(Name('9')), [('==', Const(3))]), Not(Let(Name('17'), CallFunc('equal', [ProjectTo(Const(3), Name('9')), ProjectTo(Const(3), List([]))], None, None), IfExp(Not(Name('17')), CallFunc('equal', [ProjectTo(Const(3), Name('9')), ProjectTo(Const(3), Dict([]))], None, None), Name('17')))), IfExp(Let(Name('16'), Compare(GetTag(Name('9')), [('==', Const(0))]), IfExp(Not(Name('16')), Compare(GetTag(Name('9')), [('==', Const(1))]), Name('16'))), ProjectTo(Const(1), Name('9')), CallFunc('abort', [], None, None)))), List([InjectFrom(Const(0), Const(4)), InjectFrom(Const(0), Const(5)), InjectFrom(Const(0), Const(6))]), List([InjectFrom(Const(0), Const(7)), InjectFrom(Const(0), Const(8)), InjectFrom(Const(0), Const(9))])))), Discard(CallFunc('print_any', [Name('z')], None, None))]))

